package fr.durss.skywar.skytimer.graphics.alert {	import fr.durss.skywar.skytimer.data.AppVersion;	import fr.durss.skywar.skytimer.graphics.TrayIcon;	import fr.durss.skywar.skytimer.graphics.TrayIconActivity;	import fr.durss.skywar.skytimer.graphics.timers.item.TimerItem;	import flash.desktop.NativeApplication;	import flash.desktop.SystemTrayIcon;	import flash.display.BitmapData;	import flash.display.NativeWindow;	import flash.events.TimerEvent;	import flash.utils.Timer;	/**	 * Displays the alert depending on the operating system.<br>	 * <br>	 * On windows it makes the traybar icon blinking and the taskbar tab's title 	 * changes alternativly between the application's title and the last timer's	 * name that completes.	 * 	 * @author  Francois	 */	public class OSAlert {				private var _timerTitle:Timer;		private var _timer:TimerItem;		private var _nativeWindow:NativeWindow;						/* *********** *		 * CONSTRUCTOR *		 * *********** */		/**		 * Creates an instance of <code>OSAlert</code>.<br>		 */		public function OSAlert(nativeWindow:NativeWindow) {			_nativeWindow = nativeWindow;			initialize();		}						/* ***************** *		 * GETTERS / SETTERS *		 * ***************** */		/* ****** *		 * PUBLIC *		 * ****** */		/**		 * Activate the OS alert.		 */		public function activate(timer:TimerItem):void {			_timer = timer;			_timerTitle.reset();			_timerTitle.start();			resetTitle();		}						/* ******* *		 * PRIVATE *		 * ******* */		/**		 * Initialize the class.<br>		 */		private function initialize():void {			_timerTitle = new Timer(500, 20);			_timerTitle.addEventListener(TimerEvent.TIMER,			resetTitle);			_timerTitle.addEventListener(TimerEvent.TIMER_COMPLETE,	resetTitle);						if(NativeApplication.supportsSystemTrayIcon) {				SystemTrayIcon(NativeApplication.nativeApplication.icon).tooltip = "SkyTimer v"+AppVersion.VERSION;			}		}						/**		 * Resets the window's title after a 10 seconds delay		 */		private function resetTitle(e:TimerEvent = null):void {			/*FDT_IGNORE*/			CONFIG::Air			{			/*FDT_IGNORE*/				var title:String, warn:String = " /!\\";				var bmpd:BitmapData = new BitmapData(16, 16, true, 0);				if(e == null || e.type == TimerEvent.TIMER) {					if(_nativeWindow.title == warn) {						title = _timer.name;						bmpd.draw(new TrayIconActivity());					} else {						bmpd.draw(new TrayIcon());						title = warn;					}				} else {					title = "SkyTimer v"+AppVersion.VERSION;					bmpd.draw(new TrayIcon());				}				NativeApplication.nativeApplication.icon.bitmaps = [bmpd];				_nativeWindow.title = title;//				_nativeWindow.notifyUser(NotificationType.INFORMATIONAL);			/*FDT_IGNORE*/			}			/*FDT_IGNORE*/		}			}}