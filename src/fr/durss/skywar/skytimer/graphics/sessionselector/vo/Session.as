package fr.durss.skywar.skytimer.graphics.sessionselector.vo {	import fr.durss.skywar.skytimer.time.MainTimer;	import com.adobe.crypto.SHA1;	/**	 * 	 * @author  Francois	 */	public class Session {				private var _name:String;		private var _initObj:Object;		private var _id:String;		private var _ethers:int;		private var _materials:int;		private var _cycle:Number;						/* *********** *		 * CONSTRUCTOR *		 * *********** */		/**		 * Creates an instance of <code>Session</code>.<br>		 * 		 * @param obj	initialization object (return by the <code>object</code> property)		 * @param name	optional session's name (when creating a new session)		 */		public function Session(obj:Object= null, name:String = "") {			_name		= name;			_initObj	= obj;			initialize();		}						/* ***************** *		 * GETTERS / SETTERS *		 * ***************** */				/**		 * Gets an anonymous object ready to be stored on SharedObjects.		 */		public function get object():Object {			var ret:Object = {};			ret["id"]			= id;			ret["name"]			= name;			ret["cycle"]		= cycle;			ret["ethers"]		= ethers;			ret["materials"]	= materials;			return ret;		}				/**		 * Gets the session's unique ID.<br>		 */		public function get id():String { return _id; }		/**		 * Gets the session's name<br>		 */		public function get name():String { return _name; }		/**		 * Sets the session's name<br>		 */		public function set name(value:String):void { _name = value; }		/**		 * Gets the ethers won by cycle<br>		 */		public function get ethers():int { return _ethers; }		/**		 * Sets the ethers won by cycle<br>		 */		public function set ethers(value:int):void { _ethers = value; }		/**		 * Gets the materials won by cycle<br>		 */		public function get materials():int { return _materials; }		/**		 * Sets the materials won by cycle<br>		 */		public function set materials(value:int):void { _materials = value; }		/**		 * Gets the cycle tume reference<br>		 */		public function get cycle():Number { return _cycle; }		/**		 * Sets the cycle tume reference<br>		 */		public function set cycle(value:Number):void { _cycle = value; }		/* ****** *		 * PUBLIC *		 * ****** */						/* ******* *		 * PRIVATE *		 * ******* */		/**		 * Initialize the class.<br>		 */		private function initialize():void {			if(_initObj != null) {				_name		= _initObj["name"];				_id			= _initObj["id"];				_cycle		= (_initObj["cycle"] == undefined)? MainTimer.getInstance().getTime(): _initObj["cycle"];				_ethers		= (_initObj["ethers"] == undefined)? 5 : _initObj["ethers"];				_materials	= (_initObj["materials"] == undefined)? 5 : _initObj["materials"];			} else{				_id			= SHA1.hash(_name);				_cycle		= MainTimer.getInstance().getTime();				_ethers		= 5;				_materials	= 5;			}		}	}}